name: Build and Release
on:
  push:
    tags:
      - 'v*' # Trigger on tags like 'v1.0.0'

jobs:
  build_apk:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Java JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Setup Flutter SDK
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.0'
          channel: 'stable'

      - name: Flutter version
        run: flutter --version
          
      - name: Install dependencies
        run: flutter pub get

      - name: Run flutter launcher icons
        run: flutter pub run flutter_launcher_icons
        
      - name: Create key.properties
        run: |
          echo "storePassword=${{ secrets.KEYSTORE_PASSWORD }}" > android/key.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties
          echo "storeFile=upload-keystore.jks" >> android/key.properties
          
      - name: Decode keystore
        run: |
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 -d > android/app/upload-keystore.jks
          
      - name: Create Firebase Options
        run: |
          cat > lib/firebase_options.dart << 'EOL'
          // File generated by GitHub Actions.
          import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
          import 'package:flutter/foundation.dart'
              show defaultTargetPlatform, kIsWeb, TargetPlatform;

          class DefaultFirebaseOptions {
            static FirebaseOptions get currentPlatform {
              if (kIsWeb) {
                return web;
              }
              switch (defaultTargetPlatform) {
                case TargetPlatform.android:
                  return android;
                case TargetPlatform.iOS:
                  return ios;
                default:
                  throw UnsupportedError(
                    'DefaultFirebaseOptions are not supported for this platform.',
                  );
              }
            }

            static const FirebaseOptions web = FirebaseOptions(
              apiKey: '${{ secrets.FIREBASE_WEB_API_KEY }}',
              appId: '${{ secrets.FIREBASE_WEB_APP_ID }}',
              messagingSenderId: '${{ secrets.FIREBASE_WEB_MESSAGING_SENDER_ID }}',
              projectId: '${{ secrets.FIREBASE_WEB_PROJECT_ID }}',
              authDomain: '${{ secrets.FIREBASE_WEB_AUTH_DOMAIN }}',
              storageBucket: '${{ secrets.FIREBASE_WEB_STORAGE_BUCKET }}',
              measurementId: '${{ secrets.FIREBASE_WEB_MEASUREMENT_ID }}',
            );

            static const FirebaseOptions android = FirebaseOptions(
              apiKey: '${{ secrets.FIREBASE_ANDROID_API_KEY }}',
              appId: '${{ secrets.FIREBASE_ANDROID_APP_ID }}',
              messagingSenderId: '${{ secrets.FIREBASE_WEB_MESSAGING_SENDER_ID }}',
              projectId: '${{ secrets.FIREBASE_WEB_PROJECT_ID }}',
              storageBucket: '${{ secrets.FIREBASE_WEB_STORAGE_BUCKET }}',
            );

            static const FirebaseOptions ios = FirebaseOptions(
              apiKey: '${{ secrets.FIREBASE_IOS_API_KEY }}',
              appId: '${{ secrets.FIREBASE_IOS_APP_ID }}',
              messagingSenderId: '${{ secrets.FIREBASE_WEB_MESSAGING_SENDER_ID }}',
              projectId: '${{ secrets.FIREBASE_WEB_PROJECT_ID }}',
              storageBucket: '${{ secrets.FIREBASE_WEB_STORAGE_BUCKET }}',
              iosClientId: '${{ secrets.FIREBASE_IOS_CLIENT_ID }}',
              iosBundleId: 'com.codemdg.lyra_v2',
            );
          }
          EOL

      - name: Build APK
        run: |
          flutter build apk --obfuscate --release --split-per-abi --build-number=$(git rev-list --count HEAD) --split-debug-info=build/app/outputs/symbols
        env:
          KEY_STORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: build/app/outputs/flutter-apk
          tag_name: v${{ github.run_number }}
          name: Release ${{ github.run_number }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: release-apk
          path: build/app/outputs/flutter-apk/
          
      - name: Release to GitHub
        uses: softprops/action-gh-release@v2
        with:
          files: |
            app-arm64-v8a-release.apk
            app-armeabi-v7a-release.apk
            app-x86_64-release.apk
          generate_release_notes: true
